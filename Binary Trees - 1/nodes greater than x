base condition yha bhi agr root nhi h to koi bhi greter than x hoga hi nhi that's why 0
fir if else condition lgado ki if root data bhi x se bda h to use add kro in left and right recursion
else only left and right recursion
left and right recursion will work only at either if or else condition
to fir wo null jb tk nhi hojata tb tk check krta rhega nad store krta rhega agr bda h to. that's it.


/*
	
	Following is the structure used to represent the Binary Tree Node

	class BinaryTreeNode<T> {
		T data;
		BinaryTreeNode<T> left;
		BinaryTreeNode<T> right;

		public BinaryTreeNode(T data) {
			this.data = data;
			this.left = null;
			this.right = null;
		}
	}

 */

public class Solution {

	public static int countNodesGreaterThanX(BinaryTreeNode<Integer> root, int x) {
		//Your code goes here
		if(root == null){
           return 0;
		}

		if(root.data > x){
			return 1+ countNodesGreaterThanX(root.left,x) + countNodesGreaterThanX(root.right, x);
		}
		else{
			return countNodesGreaterThanX(root.left,x) + countNodesGreaterThanX(root.right, x); 
		}
	}

}
