1. Consider the following pseudo-code that uses a Stack:

declare a stack of characters
while ( there are more characters in the word to read )
{
   read a character
   push the character on the stack
}
while ( the stack is not empty )
{
  pop a character off the stack
  write the character to the screen
}
What will be the output for "codingninjas"?
ans - sajningnidoc

2. What would be the output of the following code?

import java.util.Stack;
class Test {
    public static void main (String[] args) {
        Stack<Integer> stack=new Stack<Integer>();
        while(stack.isEmpty())
        {
            stack.push(10);
        }
        System.out.print(stack.pop()+" "+stack.size());
    }
}
ans - 10 0

3. What would be the output of the following code?

import java.util.Stack;
class Test {
    public static void main (String[] args) {
        Stack<Integer> stack=new Stack<Integer>();
        for(int i=0;i<10;i++)
        {
            stack.push(i*2);
        }
        System.out.print(stack.peek());
    }
}
ans - 18

4. What would be the output of the following code?

import java.util.Stack;
class Test {
    public static void main (String[] args) {
        Stack<Integer> stack=new Stack<Integer>();
        stack.push(5);
        stack.push(10);
        stack.push(15);
        System.out.print(stack.pop()+stack.size());
    }
}
ans - 17
