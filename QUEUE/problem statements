1. In optimized linked list implementation of a queue, where does a new element be inserted?
ans - at the tail of the LL

2. If the elements “p”, “q”, “r” and “s” are placed in a queue and are deleted one at a time, in what order will they be removed?
ans - pqrs

3. A queue is a ?
ans - FIFO(first in first out)

4. Problem statement
What would be the output of the following code?

import java.util.LinkedList;
import java.util.Queue;
class Test {
    public static void main (String[] args) {
        Queue<Integer> q=new LinkedList<Integer>();
        for(int i=1;i<5;i++)
        {
            q.add(10+i);
        }
        System.out.print(q.poll()+" "+q.size());
    }
}
ans - 11 3

5. Problem statement
What would be the output of the following code?

import java.util.LinkedList;
import java.util.Queue;
import java.util.Stack;
class Test {
    public static void main (String[] args) {
        Queue<Integer> q=new LinkedList<Integer>();
        Stack<Integer> s=new Stack<Integer>();
        q.add(5);
        q.add(10);
        s.push(10);
        s.push(20);
        System.out.print(q.peek()+s.pop());
    }
}
ans - 25

6. What are the minimum number of queues required to make a Stack?
ans - 2
