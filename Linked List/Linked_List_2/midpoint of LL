&& isliye lgaya qki agr first condition false hogi to wo dusri me dekhega bhi nahi
that is why we have not used || here
yha slow and fast ka logic isliye use kr rhe h qki slow half of the size btata h which will give us the midpoint of LL

/*

    Following is the Node class already written for the Linked List

    class Node<T> {
        T data;
        Node<T> next;
    
        public Node(T data) {
            this.data = data;
        }
    }

*/

public class Solution {
    
    public static Node<Integer> midPoint(Node<Integer> head) {
        //Your code goes here
        if(head == null || head.next == null){
            return head;
        }
        Node<Integer> slow = head;
        Node<Integer> fast = head;
        
        while(fast.next!=null && fast.next.next!=null){
            slow = slow.next;
            fast = fast.next.next;
        }
        return slow;
    }

}
