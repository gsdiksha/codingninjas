
public class solution {
    public static int countZerosRec(int input){
        if(input<10){
            if(input==0)
            return 1;
        else
            return 0;
        }

		int rem= input%10;
		int count=0;
		if(rem==0){
			count++;
		}
        return count + countZerosRec(input/10);
        }
}


public class solution {

	public static int countZerosRec(int input){
       
		// Write your code here
		if(input<10){
            if(input==0)
            return 1;
        else
            return 0;
        }

        
        // Extract the last digit of N
        int lastDigit = input % 10;

        // Initialize count of zeros
        int count = 0;

        // If the last digit is zero, increment the count
        if (lastDigit == 0) {
            count++;
        }

        // Remove the last digit from N
        input = input / 10;

        // Recursively call countZeros with the updated value of N
        return count + countZerosRec(input);

	}
}


Sample Input 1 :
0
Sample Output 1 :
1
Sample Input 2 :
00010204
Sample Output 2 :
2
Explanation for Sample Output 2 :
Even though "00010204" has 5 zeros, the output would still be 2 because when you convert it to an integer, it becomes 10204.
Sample Input 3 :
708000
Sample Output 3 :
4
